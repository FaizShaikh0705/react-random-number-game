{"ast":null,"code":"var _jsxFileName = \"/home/faiz/Desktop/react-random-number-game/src/component/RandomQuestion/RandomNumberGame.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport questions from './questions';\nimport convoQuestions from './convoquestion';\nimport pastQuestions from './pastquestion';\nimport Button from 'react-bootstrap/Button';\nimport './RandomNumberGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RandomNumberGame = () => {\n  _s();\n  const [numbers, setNumbers] = useState([...Array(100)].map((_, index) => index + 1));\n  const [currentNumber, setCurrentNumber] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState('');\n  const getNextNumber = () => {\n    if (numbers.length === 0) {\n      setCurrentNumber(null);\n      setCurrentQuestion('');\n      return;\n    }\n    const randomIndex = Math.floor(Math.random() * numbers.length);\n    const number = numbers[randomIndex];\n    const updatedNumbers = [...numbers];\n    updatedNumbers.splice(randomIndex, 1);\n    setNumbers(updatedNumbers);\n    setCurrentNumber(number);\n\n    // Generate a random question based on the number\n    const question = questions[number];\n    setCurrentQuestion(question);\n  };\n  const remainingCount = numbers.length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"d-flex justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"genarate-button\",\n            variant: \"dark\",\n            onClick: getNextNumber,\n            children: \"Generate Random Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), currentNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"cards\",\n              style: {\n                width: '18rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: \"./images/ans.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: [\"Random Number: \", currentNumber]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: currentQuestion\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), !currentNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Game over! All numbers have been used.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 76\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"d-flex justify-content-center m-4\",\n              children: [\"Numbers Left: \", remainingCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(RandomNumberGame, \"69pxWkXUGWj9d48QUxgb7b1k3Uc=\");\n_c = RandomNumberGame;\nexport default RandomNumberGame;\nvar _c;\n$RefreshReg$(_c, \"RandomNumberGame\");","map":{"version":3,"names":["useState","Container","Row","Card","questions","convoQuestions","pastQuestions","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","RandomNumberGame","_s","numbers","setNumbers","Array","map","_","index","currentNumber","setCurrentNumber","currentQuestion","setCurrentQuestion","getNextNumber","length","randomIndex","Math","floor","random","number","updatedNumbers","splice","question","remainingCount","children","className","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","width","Img","src","Body","Title","Text","_c","$RefreshReg$"],"sources":["/home/faiz/Desktop/react-random-number-game/src/component/RandomQuestion/RandomNumberGame.js"],"sourcesContent":["import { useState } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport questions from './questions';\nimport convoQuestions from './convoquestion';\nimport pastQuestions from './pastquestion';\nimport Button from 'react-bootstrap/Button';\nimport './RandomNumberGame.css'\n\n\nconst RandomNumberGame = () => {\n    const [numbers, setNumbers] = useState([...Array(100)].map((_, index) => index + 1));\n    const [currentNumber, setCurrentNumber] = useState(null);\n    const [currentQuestion, setCurrentQuestion] = useState('');\n\n    const getNextNumber = () => {\n        if (numbers.length === 0) {\n            setCurrentNumber(null);\n            setCurrentQuestion('');\n            return;\n        }\n\n        const randomIndex = Math.floor(Math.random() * numbers.length);\n        const number = numbers[randomIndex];\n        const updatedNumbers = [...numbers];\n        updatedNumbers.splice(randomIndex, 1);\n\n        setNumbers(updatedNumbers);\n        setCurrentNumber(number);\n\n        // Generate a random question based on the number\n        const question = questions[number];\n        setCurrentQuestion(question);\n\n    };  \n    const remainingCount = numbers.length;\n\n    return (\n        <>\n            <div>\n                <Container>\n                    <Row className='d-flex justify-content-center'>\n                        <Button className='genarate-button' variant=\"dark\" onClick={getNextNumber}>Generate Random Number</Button>\n                        {currentNumber && (\n                            <div className='d-flex justify-content-center'>\n                                <Card className='cards' style={{ width: '18rem' }}>\n                                    <Card.Img variant=\"top\" src=\"./images/ans.jpg\" />\n                                    <Card.Body>\n                                        <Card.Title>Random Number: {currentNumber}</Card.Title>\n                                        <Card.Text>\n                                            {currentQuestion}\n                                        </Card.Text>\n                                    </Card.Body>\n                                </Card>\n                            </div>\n                        )}\n                        {!currentNumber &&\n                            <div className='d-flex justify-content-center'><p>Game over! All numbers have been used.</p></div>\n                        }\n                        <div>\n                        <p className='d-flex justify-content-center m-4'>Numbers Left: {remainingCount}</p>\n                        </div>\n                         \n                    </Row>\n                </Container>\n            </div>\n        </>\n    )\n}\n\nexport default RandomNumberGame"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}