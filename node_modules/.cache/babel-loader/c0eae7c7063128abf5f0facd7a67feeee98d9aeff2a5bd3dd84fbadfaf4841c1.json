{"ast":null,"code":"var _jsxFileName = \"/home/faiz/Desktop/react-random-number-game/src/component/RandomQuestion/RandomNumberGame.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport questions from './questions';\nimport convoQuestions from './convoQuestion';\nimport pastQuestions from './pastQuestion';\nimport Button from 'react-bootstrap/Button';\nimport './RandomNumberGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomNumberGame = () => {\n  _s();\n  const [dataType, setDataType] = useState('general');\n  const [currentQuestion, setCurrentQuestion] = useState('');\n  const handleDataTypeChange = event => {\n    setDataType(event.target.value);\n  };\n  const getRandomQuestion = () => {\n    let selectedQuestions = [];\n    if (dataType === 'general') {\n      selectedQuestions = questions;\n    } else if (dataType === 'convo') {\n      selectedQuestions = convoQuestions;\n    } else if (dataType === 'past') {\n      selectedQuestions = pastQuestions;\n    }\n    if (selectedQuestions.length === 0) {\n      setCurrentQuestion('');\n      return;\n    }\n    const randomIndex = Math.floor(Math.random() * selectedQuestions.length);\n    const question = selectedQuestions[randomIndex];\n    setCurrentQuestion(question);\n  };\n  const remainingCount = () => {\n    if (dataType === 'general') {\n      return questions.length;\n    } else if (dataType === 'convo') {\n      return convoQuestions.length;\n    } else if (dataType === 'past') {\n      return pastQuestions.length;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"d-flex justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"data-type-select\",\n          children: \"Select Data Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"data-type-select\",\n          value: dataType,\n          onChange: handleDataTypeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"general\",\n            children: \"General\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"convo\",\n            children: \"Conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"past\",\n            children: \"Past\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"generate-button\",\n          variant: \"dark\",\n          onClick: getRandomQuestion,\n          children: \"Generate Random Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"cards\",\n            style: {\n              width: '18rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: \"your-image-url.jpg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Random Question:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: currentQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), !currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Game over! All questions have been used.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"d-flex justify-content-center m-4\",\n            children: [\"Questions Left: \", remainingCount()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(RandomNumberGame, \"A3Vh8qPsXjPNSx7SkVHZDc0IpTc=\");\n_c = RandomNumberGame;\nexport default RandomNumberGame;\nvar _c;\n$RefreshReg$(_c, \"RandomNumberGame\");","map":{"version":3,"names":["useState","Container","Row","Card","questions","convoQuestions","pastQuestions","Button","jsxDEV","_jsxDEV","RandomNumberGame","_s","dataType","setDataType","currentQuestion","setCurrentQuestion","handleDataTypeChange","event","target","value","getRandomQuestion","selectedQuestions","length","randomIndex","Math","floor","random","question","remainingCount","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","variant","onClick","style","width","Img","src","Body","Title","Text","_c","$RefreshReg$"],"sources":["/home/faiz/Desktop/react-random-number-game/src/component/RandomQuestion/RandomNumberGame.js"],"sourcesContent":["import { useState } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport questions from './questions';\nimport convoQuestions from './convoQuestion';\nimport pastQuestions from './pastQuestion';\nimport Button from 'react-bootstrap/Button';\nimport './RandomNumberGame.css';\n\nconst RandomNumberGame = () => {\n  const [dataType, setDataType] = useState('general');\n  const [currentQuestion, setCurrentQuestion] = useState('');\n\n  const handleDataTypeChange = (event) => {\n    setDataType(event.target.value);\n  };\n\n  const getRandomQuestion = () => {\n    let selectedQuestions = [];\n\n    if (dataType === 'general') {\n      selectedQuestions = questions;\n    } else if (dataType === 'convo') {\n      selectedQuestions = convoQuestions;\n    } else if (dataType === 'past') {\n      selectedQuestions = pastQuestions;\n    }\n\n    if (selectedQuestions.length === 0) {\n      setCurrentQuestion('');\n      return;\n    }\n\n    const randomIndex = Math.floor(Math.random() * selectedQuestions.length);\n    const question = selectedQuestions[randomIndex];\n\n    setCurrentQuestion(question);\n  };\n\n  const remainingCount = () => {\n    if (dataType === 'general') {\n      return questions.length;\n    } else if (dataType === 'convo') {\n      return convoQuestions.length;\n    } else if (dataType === 'past') {\n      return pastQuestions.length;\n    }\n  };\n\n  return (\n    <div>\n      <Container>\n        <Row className='d-flex justify-content-center'>\n          <label htmlFor=\"data-type-select\">Select Data Type:</label>\n          <select id=\"data-type-select\" value={dataType} onChange={handleDataTypeChange}>\n            <option value=\"general\">General</option>\n            <option value=\"convo\">Conversation</option>\n            <option value=\"past\">Past</option>\n          </select>\n          <Button className='generate-button' variant=\"dark\" onClick={getRandomQuestion}>\n            Generate Random Question\n          </Button>\n          {currentQuestion && (\n            <div className='d-flex justify-content-center'>\n              <Card className='cards' style={{ width: '18rem' }}>\n                {/* Update the image URL below */}\n                <Card.Img variant=\"top\" src=\"your-image-url.jpg\" />\n                <Card.Body>\n                  <Card.Title>Random Question:</Card.Title>\n                  <Card.Text>{currentQuestion}</Card.Text>\n                </Card.Body>\n              </Card>\n            </div>\n          )}\n          {!currentQuestion && (\n            <div className='d-flex justify-content-center'>\n              <p>Game over! All questions have been used.</p>\n            </div>\n          )}\n          <div>\n            <p className='d-flex justify-content-center m-4'>Questions Left: {remainingCount()}</p>\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default RandomNumberGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}