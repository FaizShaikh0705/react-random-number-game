{"ast":null,"code":"var _jsxFileName = \"/home/faiz/Desktop/react-random-number-game/src/component/RandomQuestion/RandomNumberGame.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport questions from './questions';\nimport convoQuestions from './convoquestion';\nimport pastQuestions from './pastquestion';\nimport Button from 'react-bootstrap/Button';\nimport './RandomNumberGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RandomNumberGame = () => {\n  _s();\n  const [dataType, setDataType] = useState('general');\n  const [currentQuestion, setCurrentQuestion] = useState('');\n  const handleDataTypeChange = event => {\n    setDataType(event.target.value);\n  };\n  const getRandomQuestion = () => {\n    let selectedQuestions = [];\n    if (dataType === 'general') {\n      selectedQuestions = questions;\n    } else if (dataType === 'convo') {\n      selectedQuestions = convoQuestions;\n    } else if (dataType === 'past') {\n      selectedQuestions = pastQuestions;\n    }\n    if (selectedQuestions.length === 0) {\n      setCurrentQuestion('');\n      return;\n    }\n    const randomIndex = Math.floor(Math.random() * selectedQuestions.length);\n    const question = selectedQuestions[randomIndex];\n    setCurrentQuestion(question);\n  };\n  const remainingCount = () => {\n    if (dataType === 'general') {\n      return questions.length;\n    } else if (dataType === 'convo') {\n      return convoQuestions.length;\n    } else if (dataType === 'past') {\n      return pastQuestions.length;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"d-flex justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"data-type-select\",\n              children: \"Select Data Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"data-type-select\",\n              value: dataType,\n              onChange: handleDataTypeChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"general\",\n                children: \"General\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"convo\",\n                children: \"Conversation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"past\",\n                children: \"Past\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: getRandomQuestion,\n              children: \"Get Random Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), currentQuestion && /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '18rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: \"your-image-url.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: \"Random Question:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: currentQuestion\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), !currentQuestion && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No question available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 50\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Remaining Count: \", remainingCount()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), \"); };\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(RandomNumberGame, \"A3Vh8qPsXjPNSx7SkVHZDc0IpTc=\");\n_c = RandomNumberGame;\nexport default RandomNumberGame;\nvar _c;\n$RefreshReg$(_c, \"RandomNumberGame\");","map":{"version":3,"names":["useState","Container","Row","Card","questions","convoQuestions","pastQuestions","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","RandomNumberGame","_s","dataType","setDataType","currentQuestion","setCurrentQuestion","handleDataTypeChange","event","target","value","getRandomQuestion","selectedQuestions","length","randomIndex","Math","floor","random","question","remainingCount","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onClick","style","width","Img","variant","src","Body","Title","Text","_c","$RefreshReg$"],"sources":["/home/faiz/Desktop/react-random-number-game/src/component/RandomQuestion/RandomNumberGame.js"],"sourcesContent":["import { useState } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport questions from './questions';\nimport convoQuestions from './convoquestion';\nimport pastQuestions from './pastquestion';\nimport Button from 'react-bootstrap/Button';\nimport './RandomNumberGame.css'\n\n\nconst RandomNumberGame = () => {\n    const [dataType, setDataType] = useState('general');\n    const [currentQuestion, setCurrentQuestion] = useState('');\n\n    const handleDataTypeChange = (event) => {\n        setDataType(event.target.value);\n    };\n\n    const getRandomQuestion = () => {\n        let selectedQuestions = [];\n\n        if (dataType === 'general') {\n            selectedQuestions = questions;\n        } else if (dataType === 'convo') {\n            selectedQuestions = convoQuestions;\n        } else if (dataType === 'past') {\n            selectedQuestions = pastQuestions;\n        }\n\n        if (selectedQuestions.length === 0) {\n            setCurrentQuestion('');\n            return;\n        }\n\n        const randomIndex = Math.floor(Math.random() * selectedQuestions.length);\n        const question = selectedQuestions[randomIndex];\n\n        setCurrentQuestion(question);\n    };\n\n    const remainingCount = () => {\n        if (dataType === 'general') {\n            return questions.length;\n        } else if (dataType === 'convo') {\n            return convoQuestions.length;\n        } else if (dataType === 'past') {\n            return pastQuestions.length;\n        }\n    };\n\n\n\n    return (\n        <>\n            <div>\n                <Container>\n                    <Row className='d-flex justify-content-center'>\n\n                        <div>\n                            <label htmlFor=\"data-type-select\">Select Data Type:</label>\n                            <select id=\"data-type-select\" value={dataType} onChange={handleDataTypeChange}>\n                                <option value=\"general\">General</option>\n                                <option value=\"convo\">Conversation</option>\n                                <option value=\"past\">Past</option>\n                            </select>\n\n                            <button onClick={getRandomQuestion}>Get Random Question</button>\n\n                            {currentQuestion && (\n                                <Card style={{ width: '18rem' }}>\n                                    <Card.Img variant=\"top\" src=\"your-image-url.jpg\" />\n                                    <Card.Body>\n                                        <Card.Title>Random Question:</Card.Title>\n                                        <Card.Text>{currentQuestion}</Card.Text>\n                                    </Card.Body>\n                                </Card>\n                            )}\n                            {!currentQuestion && <p>No question available.</p>}\n                            <p>Remaining Count: {remainingCount()}</p>\n                        </div>\n                        );\n};\n\n                        {/* <label htmlFor=\"data-type-select\">Select Data Type:</label>\n                        <select id=\"data-type-select\" value={dataType} onChange={handleDataTypeChange}>\n                            <option value=\"general\">General</option>\n                            <option value=\"convo\">Conversation</option>\n                            <option value=\"past\">Past</option>\n                        </select>\n                        <Button className='genarate-button' variant=\"dark\" onClick={getRandomQuestion}>Generate Random Question</Button>\n                        {currentQuestion && (\n                            <div className='d-flex justify-content-center'>\n                                <Card className='cards' style={{ width: '18rem' }}>\n                                    <Card.Img variant=\"top\" src=\"./images/ans.jpg\" />\n                                    <Card.Body>\n                                        <Card.Title>Random Question:</Card.Title>\n                                        <Card.Text>\n                                            {currentQuestion}\n                                        </Card.Text>\n                                    </Card.Body>\n                                </Card>\n                            </div>\n                        )}\n                        {!currentQuestion &&\n                            <div className='d-flex justify-content-center'><p>Game over! All numbers have been used.</p></div>\n                        }\n                        <div>\n                            <p className='d-flex justify-content-center m-4'>Numbers Left: {remainingCount}</p>\n                        </div> */}\n\n                    </Row>\n                </Container>\n            </div>\n        </>\n    )\n}\n\nexport default RandomNumberGame"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}