{"ast":null,"code":"var _jsxFileName = \"/home/faiz/Desktop/react-random-number-game/src/component/RandomQuestion/RandomNumberGame.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport questions from './questions';\nimport convoQuestions from './convoquestion';\nimport pastQuestions from './pastquestion';\nimport Button from 'react-bootstrap/Button';\nimport './RandomNumberGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RandomNumberGame = () => {\n  _s();\n  const [dataType, setDataType] = useState('general');\n  const [currentQuestion, setCurrentQuestion] = useState('');\n  const handleDataTypeChange = event => {\n    setDataType(event.target.value);\n  };\n  const getRandomQuestion = () => {\n    let selectedQuestions = [];\n    if (dataType === 'general') {\n      selectedQuestions = questions;\n    } else if (dataType === 'convo') {\n      selectedQuestions = convoQuestions;\n    } else if (dataType === 'past') {\n      selectedQuestions = pastQuestions;\n    }\n    if (selectedQuestions.length === 0) {\n      setCurrentQuestion('');\n      return;\n    }\n    const randomIndex = Math.floor(Math.random() * selectedQuestions.length);\n    const question = selectedQuestions[randomIndex];\n    setCurrentQuestion(question);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"d-flex justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"genarate-button\",\n            variant: \"dark\",\n            onClick: getNextNumber,\n            children: \"Generate Random Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), currentNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"cards\",\n              style: {\n                width: '18rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: \"./images/ans.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: [\"Random Number: \", currentNumber]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: currentQuestion\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), !currentNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Game over! All numbers have been used.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 76\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"d-flex justify-content-center m-4\",\n              children: [\"Numbers Left: \", remainingCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(RandomNumberGame, \"A3Vh8qPsXjPNSx7SkVHZDc0IpTc=\");\n_c = RandomNumberGame;\nexport default RandomNumberGame;\nvar _c;\n$RefreshReg$(_c, \"RandomNumberGame\");","map":{"version":3,"names":["useState","Container","Row","Card","questions","convoQuestions","pastQuestions","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","RandomNumberGame","_s","dataType","setDataType","currentQuestion","setCurrentQuestion","handleDataTypeChange","event","target","value","getRandomQuestion","selectedQuestions","length","randomIndex","Math","floor","random","question","children","className","variant","onClick","getNextNumber","fileName","_jsxFileName","lineNumber","columnNumber","currentNumber","style","width","Img","src","Body","Title","Text","remainingCount","_c","$RefreshReg$"],"sources":["/home/faiz/Desktop/react-random-number-game/src/component/RandomQuestion/RandomNumberGame.js"],"sourcesContent":["import { useState } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport questions from './questions';\nimport convoQuestions from './convoquestion';\nimport pastQuestions from './pastquestion';\nimport Button from 'react-bootstrap/Button';\nimport './RandomNumberGame.css'\n\n\nconst RandomNumberGame = () => {\n    const [dataType, setDataType] = useState('general');\n    const [currentQuestion, setCurrentQuestion] = useState('');\n\n    const handleDataTypeChange = (event) => {\n        setDataType(event.target.value);\n    };\n\n    const getRandomQuestion = () => {\n        let selectedQuestions = [];\n\n        if (dataType === 'general') {\n            selectedQuestions = questions;\n        } else if (dataType === 'convo') {\n            selectedQuestions = convoQuestions;\n        } else if (dataType === 'past') {\n            selectedQuestions = pastQuestions;\n        }\n\n        if (selectedQuestions.length === 0) {\n            setCurrentQuestion('');\n            return;\n        }\n\n        const randomIndex = Math.floor(Math.random() * selectedQuestions.length);\n        const question = selectedQuestions[randomIndex];\n\n        setCurrentQuestion(question);\n    };\n\n\n    return (\n        <>\n            <div>\n                <Container>\n                    <Row className='d-flex justify-content-center'>\n                        <Button className='genarate-button' variant=\"dark\" onClick={getNextNumber}>Generate Random Number</Button>\n                        {currentNumber && (\n                            <div className='d-flex justify-content-center'>\n                                <Card className='cards' style={{ width: '18rem' }}>\n                                    <Card.Img variant=\"top\" src=\"./images/ans.jpg\" />\n                                    <Card.Body>\n                                        <Card.Title>Random Number: {currentNumber}</Card.Title>\n                                        <Card.Text>\n                                            {currentQuestion}\n                                        </Card.Text>\n                                    </Card.Body>\n                                </Card>\n                            </div>\n                        )}\n                        {!currentNumber &&\n                            <div className='d-flex justify-content-center'><p>Game over! All numbers have been used.</p></div>\n                        }\n                        <div>\n                            <p className='d-flex justify-content-center m-4'>Numbers Left: {remainingCount}</p>\n                        </div>\n\n                    </Row>\n                </Container>\n            </div>\n        </>\n    )\n}\n\nexport default RandomNumberGame"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}